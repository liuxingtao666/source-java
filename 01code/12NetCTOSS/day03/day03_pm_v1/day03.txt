1、状态维护
	1）开通
		a、点击开通按钮，将状态改为开通态，并将暂停
			时间修改为null。
			update account set status='0',
			pause_date=null where id=?
		b、开通态的数据可以进行暂停、修改、删除。
			开通态的数据显示按钮为暂停、修改、删除。
		c、开通账务账号时，不需要开通其下属的所有
			业务账号。
	2）暂停
		a、点击暂停按钮，将状态改为暂停态，并将暂停
			时间修改为当前系统时间。
			update account set status='1',
			pause_date=sysdate where id=?
		b、暂停态的数据可以进行开通、修改、删除。
			即显示按钮为开通、修改、删除。
		c、暂停账务账号，同时暂停其下属的所有业务
			账号。（先不做）
		开发思路
			--需要2次请求
				1>暂停账务账号
				2>刷新列表页面（完成了）
			--暂停账务账号
				在暂停后，需要刷新列表页面，刷新时需要
				保留搜索条件和页码，那么为了刷新时方便
				传递这些参数，可以使用异步的方式来实现
				暂停，那么暂停后调用列表页面的to_page
				来实现刷新，避免传参的麻烦。
			--请求过程
				$.post-->filter-->struts.xml-->Action
				-->DAO-->DBUtil-->回调函数
		开发步骤
			--DAO
				提供暂停的方法，实际上是修改账务账号的
				状态和暂停时间字段。
			--Action
				输入：id
				输出：Map
			--struts.xml
			--JSP(*)
				1>发异步请求
				2>回调函数中根据返回值给予提示，并刷新
					页面。
	3）删除
			为了保证数据的安全性和可追溯性，很多企业
			不希望真正删除自己的重要数据，仅仅是将其
			标识为一种删除的状态来看待。
		a、点击删除按钮，将状态改为删除态，并将删除
			时间修改为当前系统时间。
			update account set status='2',
			close_date=sysdate where id=?
		b、删除态的数据不能进行开通、修改、删除。
			即不显示任何按钮。
		c、暂停账务账号，同时暂停其下属的所有业务
			账号。（先不做）