servlet小结
1,servlet基础
	(1)什么是servlet?
	(2)什么是servlet容器(tomcat)?
	(3)如何开发一个servlet?
	(4)http协议(了解)
		a,什么是http协议?
		b,请求数据包与响应数据包的结构
		c,什么是状态码?,常见的状态码?
		d,什么是消息头?
		e,两种请求方式(get/post)的特点?
2,servlet核心
	(1)表单处理
		a,如何获得请求参数值?
			String request.getParameter(String paranName);
			String[] request.getParameterValues(String paranName);
		b,如何获得中文参数值?
			step1,要确保表单所在的页面按照指定的字符集
			打开。
				html : <meta http-equiv="content-type" 
				content="text/html;charset=utf-8">
				jsp:  <%@page pageEncoding="utf-8" 
				contentType="text/html;charset=utf-8"%>
			step2,服务器端，按照指定的字符集解码。
				方式一:  request.setCharacterEncoding("utf-8");
				方式二:  new String(str.getBytes("iso-8859-1"),
				"utf-8");
		(2)servlet输出中文，要注意什么?
				response.setContentType(
				"text/html;charset=utf-8");	
		(3)容器如何处理请求资源路径?
		(4)如何让一个servlet处理多种请求?
				String request.getRequestURI();
		(5)转发与重定向
			a,什么是重定向?
			b,如何重定向?
				response.sendRedirect(String url);
			c,重定向的特点?
			d,什么是转发?
			e,如何转发?
				request.setAttribute(String name,Object obj);
				RequestDispatcher rd = 
				request.getRequestDispatcher(String url);
				rd.forward(request,response);
			f,转发的特点?
			g,转发与重定向的比较?
		(6)servlet的生命周期
			a,什么是servlet的生命周期
			b,分成哪几个阶段
				b1,实例化(什么时候实例化,load-on-startup
				参数)
				b2,初始化(什么时候初始化,如何实现自己的初
				始化逻辑,初始化参数)
				b3,就绪(doGet方法与doPost方法)
				b4,销毁
			c,相关的几个接口与类
				Servlet接口,GenericServlet抽象类,
				HttpServlet抽象类,ServletConfig接口。
		(7)线程安全问题
			a,为什么说servlet会有线程安全问题
			b,如何解决			
3,状态管理
	(1)什么是状态管理?
	(2)cookie
		a,什么是cookie?
		b,cookie是如何工作的?
		c,如何添加一个cookie?
			Cookie c = new Cookie(String name,
			String value);
			response.addCookie(c);
		d,生存时间
			setMaxAge(int seconds)
		e,编码问题
			String URLEncoder.encode(String str,String code);
			String URLDecoder.decode(String str,String code);
		f,路径问题
			setPath(String path);
		g,cookie有哪些限制
	(3)session
		a,什么是session?
		b,如何获得一个session对象
			HttpSession s = request.getSession(boolean flag);
			HttpSession s = request.getSession();
		c,常用的几个方法
			String getId();
			setAttribute,getAttribute,removeAttribute
		d,session超时
			setMaxInactiveInterval(int seconds)
		e,删除session对象
			invalidate()
		f,如果禁止cookie,如何继续使用session?(了解)
			url重写(response.encodeURL,response.encodeRedirectURL)
		g, cookie与session的比较。
4,数据库访问
	(1)servlet如何使用jdbc访问数据库
	(2)dao
5,过滤器与监听器
	(1)什么是过滤器
	(2)如何写一个过滤器
	(3)过滤器的初始化参数
	(4)过滤器的优先级
	(5)过滤器的优点
	(6)什么是监听器
	(7)如何写一个监听器
	(8)ServletContext
		a,什么是servlet上下文
		b,如何获得servlet上下文
		c,作用
6,典型案例与扩展
	员工信息管理
	登录
	session验证
	验证码
	
一,jsp基础 
	1,jsp是什么?
	2,如何写一个jsp?
		step1,写一个以".jsp"为后缀的文件
		step2,添加
			(1)html (css,js) : 直接写
			(2)java代码:
				1) <%    %>
				2) <%=   %>
				3)  jsp声明 (a1.jsp)
					 <%!    %>  
			(3)指令
				1)什么是指令
				2)	page
					a,import
					b,pageEncoding
					c,contentType
					d,session(a2.jsp):true(缺省)/false,当值
							为false,容器不再添加获得session对
							象的代码了。
					e,errorPage(a3.jsp):指定一个错误处理页面。
					f,isErrorPage(a4.jsp):true/false(缺省)，如果值是
							true，表示这是一个错误处理页面。只
							要当该属性值为true，才能使用exception
							隐含对象。
				3)include
						file:通知容器，将file属性指定的
						文件的内容包含进来。
				4)taglib
						引入jsp标签。
				(4)隐含对象
					1)什么是隐含对象?
					2)为什么可以直接使用这些隐含对象?
					3)有哪一些隐含对象?
						a,out
						b,request
						c,response
						d,session
						e,application
						f,exception: 容器会将jsp运行的异常信息
						封装到exception对象里面，可以调用该
						对象的方法来获得异常信息。该隐含对象
						要求设置isErrorPage=true时才能使用。
						g,pageContext:
							g1,容器会为每一个jsp实例(jsp对应的
							那个servlet对象)创建唯一的一个符合
							PageContext接口要求的对象，称之为
							页面上下文。该对象有两个特点:
								唯一性：
								一直存在：只要jsp实例没有被销毁，
								页面上下文就一直存在。
								g2,作用(a5.jsp,a6.jsp):
									作用1：绑订数据。
									setAttribute,removeAttribute,
									getAttribute
									绑订的数据只有对应的jsp实例能
									访问。
									作用2：找到其它所有的隐含对象。
						h,config:ServletConfig对象(a7.jsp)
						i, page:jsp实例本身。
					(5)注释 (a8.jsp)
						<%--  注释 --%>:如果注释的内容
						是java代码，不会执行。
						<!--  注释 -->: 如果注释的内容是
						java代码，会执行。
	3,jsp是如何执行的?
		step1,容器要将.jsp文件转换成一个servlet类。
			html      ---->   service方法，使用out.write
								输出。
			<%   %>  ---->   service方法,照搬。
			<%=  %>  ---->   service方法,使用out.print
								输出。
			<%!   %>  ---->   为servlet添加新的属性或者
										新的方法。
		step2,将servlet类编译，然后实例化、初始化、
			就绪调用。

mysql的存储引擎:
		innoDB:支持事务
		MyIsam:不支持事务
	
练习： 注册
		step1,检查验证码是否正确
		step2,检查用户名是否被占用
		step3,将用户信息插入到数据库，然后跳转到
		登录页面。

摘要加密(了解)
	(1)特点
		a,不可逆性：不使用密钥，依据密文，无法反
		推出明文。
		b,唯一性：不同的明文，经过加密之后，得到
		唯一的一个密文。
		www.cmd5.com
	
练习：网上交友
	step1,建表
		create table friend_user(
			id int primary key auto_increment,
			username varchar(50) unique,
			name varchar(255),
			pwd varchar(30),
			age int,
			gender char(1),
			phone varchar(20),
			ask text
		);
		create table friend_pic(
			id int primary key auto_increment,
			picName varchar(50),
			userId int
		);
	step2,创建一个web工程
	step3,
		1、注册
			(1)User类(实体类)
			(2)UserDAO类
				public User findByUsername(String username);
				public int save(User user);
			(3)regist.jsp
			(4)ActionServlet,添加"/regist"	
				插入用户记录之后，要在upload文件夹下面
				创建一个用来保存用户的照片的文件夹(
				"pic_" + id)
		2、登录
				(1)login.jsp
				(2)ActionServlet，添加"/login"
		3、用户列表
				(1)给UserDAO添加
					List<User> findAll();
				(2)ActionServlet,添加"/list"
				(3)list.jsp
		4、详细信息
				(1)Pic类(实体类)
				(2)PicDAO类
					public void save(Pic pic);
					public List<Pic> findByUserId(int id);
				(3)给UserDAO添加 
					public User findById(int id);
				(4)ActionServlet,添加"userDetail"
				(5)userDetail.jsp
					
	
		