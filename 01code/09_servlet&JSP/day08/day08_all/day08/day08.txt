1、验证码
	(1)什么是验证码
	 	验证码是用来干扰机器人(机器人是一个程序，
	 可以用来模拟用户的操作，比如登录)的图片。
	(2)如何生成验证码
		step1,绘图
		step2,将图片压缩并输出。
	(3)如何使用验证码
	练习：
		生成一个验证码，该验证码由"A~Z","0~9"中
	随机选取5个字符组成。
	
2、url重写(了解)
	(1)什么是url重写?
		浏览器向服务器上的某个地址(url)发请求时，
	不能够直接使用这个url,而应该使用添加了session
	Id的url(即改写或者重写原来的url)。
	(2)如何进行url重写
		a,对于链接地址和表单提交地址，使用:
		response.encodeURL(String url);
		b,对于重定向地址，使用
		response.encodeRedirect(String url);
		比如:
			<form action=
				"<%=response.encodeURL("some.do")%>"
			response.sendRedirect(
			response.encodeRedirect("list.jsp"));
3、session小结
	session是一种服务器端的状态管理技术，相对于
	cookie,优点是：
		安全
		保存更多的数据(cookie只能保存约4k左右的数据)
		更丰富的数据类型(cookie只能保存字符串)			
	缺点是:
		session技术会将状态(即数据)都保存在服务器端，
	所以，当访问量大的时候，服务器的内存空间占用
	比较大。
	
4、过滤器
	(1)什么是过滤器?
		servlet规范当中定义的一种特殊的组件，用来
	拦截servlet容器的调用过程，容器会先执行过滤器的
	方法，然后才调用其后的servlet。
	(2)如何写一个过滤器?
		step1,写一个java类，实现Filter接口。
		step2,在doFilter方法里面，编写处理逻辑。
		step3,配置(web.xml)过滤器,让容器知道哪些
		请求需要过滤。
	(3)过滤器的优先级
		如果有多个过滤器都满足过滤器的条件，则容器
		会按照<filter-mapping>的先后顺序来调用。	
	练习：
			写一个过滤器，检查评论的字数，如果超过
		10个字,则提示评论的字数过多。
		
	练习： 注册
		step1,检查验证码是否正确
		step2,检查用户名是否被占用
		step3,将用户信息插入到数据库，然后跳转到
		登录页面。
	
	
	
