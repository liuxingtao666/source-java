回顾
  1 对象(存在)：是结构化数据
  2 类(名词) ：是对象的结构定义，作为模板用于创建对象
  3 引用：操作对象的变量
    Cell c2;
    Cell c1 = new Cell(1,3);
    c1 = null;
  4 方法(动词): 对象的功能，行为，动作，就是算法
  5 方法重载：功能类似，方法名一样，参数不同的
    的"不同方法"
  6 this: 在方法中，在运行期间引用调用这个(this)
  方法的对象. 用于访问当前对象的属性和方法，一般
  可以省略。 如果不能区别局部变量与当前对象的属性
  时候，就不能省略了（方法也是一样）
  7 构造器: 用于创建对象
    类一定有构造器，一定使用构造器创建对象!
   困惑：构造器和方法区别
   构造器：
    1) 名字与类名一定一样！
    2) 不能定义返回值！
    3) 必须使用new 调用
    4) 用于"创建"（初始化）对象（初始化对象数据）
      new Cell(1,3);
  方法：
    1) 名字一般与名不同
    2) 必须定义返回值，如果没有返回值使用void
    3) 使用.调用方法
    4) 方法是"行为"，是动作。
      c1.drop()
      
   package day01;
  
   class Cell{
   	 int row;
   	 int col;
   	 public Cell( int row, int c){
   	   //全限定名：全名
   	   day01.Cell.this.row = row;
   	   this.col = c;
     }
   }
  

1 默认构造器  
   1) "类一定有构造器"，一定使用构造器创建对象!
   2) 当一个类没有任何构造器时候，Java编译器
   会自动添加默认构造器。
   3) 如果类中声明任何构造器，将不再提供默认构造器   
   
   class Cell{
     int row;
     int col;
     //public Cell(){
     //}
   }

   class Cell{
   	 int row;
   	 int col;
   	 public Cell( int row, int c){
   	   //全限定名：全名
   	   day01.Cell.this.row = row;
   	   this.col = c;
     }
   }
  
2 构造器(也叫 构造方法)的“重载”
  1) 名字一样，这是废话，构造器名字都一样！
  2) 参数不同
  3) 功能类似 的不同方法 
  
  为什么要用构造器重载，如何用构造器重载
  研究一下打飞机！
  
 请记住：用正确的语法表述合理的业务逻辑 
  
3 关于 null: 是一个字面量，可以赋值给引用类型变量
  如果引用类型变量的值是null时候，表示不引用
  任何对象了。
  注意：如果在值是null的引用类型变量上 调用
  属性，方法，数组元素 将发生空指针异常！
  如果软件中出现空指针异常，一定考虑引用变量应该
  在何时赋值为对象！

4 继承：父子概念的延续关系，就是父子类型关系
  如：汽车 和 小轿车
  
  软件中的继承：飞行物 与 飞机 和 炸弹
    4格方块 和 7种具体方块
    
  继承的特点：子类可以继承父类的属性和方法
   反之: 子类可以共享父类中定义的属性和方法
   如果将子类的共同属性和方法定义在父类中
   就简化了子类的定义！
   构造器不可继承。
   
   
   
  
  










  
  
  
  
  
  
  
  
  