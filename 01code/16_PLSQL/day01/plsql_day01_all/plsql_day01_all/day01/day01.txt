一、PLSQL简介
	1、什么是PLSQL
		Procedure Language SQL，过程化SQL语言。
		它是Oracle数据库特有的编程语法，可以实现
		一些复杂的运算及功能。
		它是在SQL语言基础上加入了循环、判断等元素，
		而提出的数据库编程方式。
		PLSQL存储并运行在Oracle数据上。
	2、PLSQL的作用
		在数据库上直接运行，效率高。
		适合于处理大数据量的运算。
	3、优缺点
		优点：执行效率高
		缺点：非面向对象语言，编写及维护难度大。
			开发效率低，测试效率低。
	
二、PLSQL的结构
	1、基本结构
		declare
			--变量声明区
		begin
			--业务处理区
			exception
				--异常处理区
		end;
		/
	2、最简结构
		begin
			--业务处理区
		end;
		/
	3、说明
		1）以上代码结构，只是定义一个匿名代码块，
			可以在Oracle中编译并运行一次，不会存储
			在Oracle上。如果希望存储，则需要定义成
			存储过程、函数、触发器。
		2）PLSQL以"/"结束。
	4、练习1：PLSQL之HelloWorld
		1）开启输出显示
			set serveroutput on;
			可以在SqlDeveloper控制台输出一些内容。
		2）控制台输出
			dbms_output.put_line('xxx');

三、PLSQL的使用
	1、注释
		1）单行注释
			--注释内容
		2）多行注释
			/*注释内容*/
	*2、声明变量
		1）语法
			declare
				变量名1 类型;
				变量名2 类型:=值;
		2）注意
			--变量名定义在declare下
			--给变量赋值用":="
			--判断相等用"="
			--如果声明变量时没有赋值，则变量值为null。
				null值与其他数值运算时结果还是null。
		3）练习2
			声明3个变量a=3、b=5、c，
			然后计算c=a+b，输出c。
	*3、判断
		1）语法
			if 条件 then 
				...
			elsif 条件 then
				...
			else
				...
			end if;
		2）注意
			--是elsif，而不是elseif
			--最后的else后面没有条件和then
			--判断以end if;结束
		3）练习3
			判断变量sex，如果值为M则输出男，
			如果值为F则输出女，否则输出人妖。
		4）练习4，综合练习
			声明2个整型变量m,n，并赋值。
			判断m,n的大小
			若m>n，则输出1；
			若m<n，则输出-1；
			若m=n，则输出0；
	*4、循环（3种方式）
		1）loop循环
			a、语法
				loop --开始循环
					--循环内部的处理逻辑
					--循环变量递增
					exit when 结束条件
				end loop; --结束循环
			b、练习5，使用loop循环输出1-10
			c、练习6，使用loop循环从1累加到100
		2）while循环
			a、语法
				while 条件 loop
					--处理业务逻辑
					--变量自增
				end loop;
			b、练习7，使用while循环输出1-10
		3）for循环
			a、语法
				for 变量 in 集合 loop
					--处理业务逻辑
				end loop;
			b、练习8，使用for循环输出1-10
			c、说明
				--for循环中的集合要求是数字型集合，
					或者是游标。
	5、使用DML和TCL语句
		1）DML和TCL语句，可以直接写在PLSQL中，
			没有任何特殊要求。
		2）练习9，对部门表进行增、删、改操作
	6、使用DDL语句
		1）语法
			execute immediate 'DDL语句';
		2）练习10，创建一张表，并插入一条数据
		3）注意
			在PLSQL中使用DDL建表后，不能直接写SQL
			来使用这张表。原因是编译时通不过，编译时
			先编译建表语句，仅仅是对其语法进行了验证，
			并没有真正执行建表语句。因此后面直接使用表
			时由于表不存在，导致编译失败。
			如果需要这样做的话，后面的SQL语句需要按照
			如下方式来写
			execute immediate 'SQL';
	*7、使用DQL语句
		PLSQL中调用查询的目的不是为了返回结果显示
		数据，因为直接查询表或者查询视图可以很好的
		解决显示问题。PLSQL中的查询目的是获取数据，
		并利用这些数据参与运算，因此需要将查询结果
		封装到变量中，使用变量运算。
		1）返回一条结果
			a、使用select into 变量
				将查询到的这条数据中的字段值，封装到
				一些变量中
			b、语法
				--将查询到的字段1,字段2存入变量1,变量2中
				select 字段1，字段2，...
				into 变量1，变量2，...
				from 表 where 条件
			c、练习11，查询一条dept数据，并输出
			d、使用%type声明变量类型
				--指定变量的类型与表中的某字段一致
				变量名 表.字段%type
			e、练习12，将练习11的变量声明方式改为%type
		2）返回多条结果
			a、使用游标cursor
				将查询到的多条数据封装到一个游标对象中，
				这个游标类似于ResultSet
			b、使用loop遍历游标
				语法：
					declare
						--声明游标，封装的是select查询的所有结果
						cursor 游标名 is
							select 语句;
					begin
						open 游标名;	--开启游标
							loop
								--移动游标指针，让当前指针对应
								--的行数据，存入变量中
								fetch 游标名 into 变量;
								exit when 退出条件;
								--处理业务逻辑
							end loop;
						close 游标名;	--关闭游标
					end;
					/
				练习13:
					查询多行dept，并使用游标遍历输出
				游标活动过程：
					--初始时，游标指针指向第一行数据的
						上方。
					--每次fetch时，游标指针向下移动一个
						位置，如果移动成功，则当前游标的
						状态为found。
					--当游标指针指向最后一个位置，再次
						fetch时，游标无法再次向下移动了，
						它会停留在最后的位置，但游标的状态
						变为notfound。
			c、使用while遍历游标
				语法：
					declare
						cursor 游标名 is
							select 语句;
					begin
						open 游标名;
							fetch 游标名 info 变量;
							while 游标名%found loop
								--处理业务逻辑
								fetch 游标名 info 变量;
							end loop;
						close 游标名;
					end;
					/
				练习14：
					使用while循环遍历游标
				定义行变量：
					--声明一个行变量，其结构与指定的表
						一样，可以封装这个表中一行数据。
						表里有几个字段，这个行变量中就有
						及格字段，对这些字段的访问方式为
						变量名.字段名
					变量名 表%rowtype;
				练习15
					修改练习14，将变量的声明改为%rowtype
					的方式。
			*d、使用for遍历游标
				语法：
					--声明变量，其类型为游标中行数据的类型
					for 变量名 in 游标 loop
						--处理业务逻辑
					end loop;
				练习16：
					使用for循环遍历游标 
