Collection接口
List：可重复集     
Set：不可重复集   

List：
List允许我们通过下标操作集合元素。这一点
很像数组。

List有两个常用的实现类:
ArrayList:  底层是依靠对象数组实现的
LinkedList: 底层是靠链表实现的

ArrayList:查询效率高，增删效率低
LinkedList:增删效率高，查询效率低

List提供的一些独有方法:
E get(int index):获取当前集合中给定下标所对应位置上的元素。
相当于是调用数组的: array[1]	

E set(int index,E e)
将给定的元素存入集合中给定下标位置的地方。并返回被替换的原位置的元素。

E remove(int index)
删除指定位置的元素

void add(int index,E e)
向集合指定位置插入元素

泛型
java1.5之后出现的一个新特性。
可以在使用某个类的某个实例时，动态指定其属性，方法的参数，返回值的类型。


集合也支持泛型
泛型在集合中的作用是约束集合元素类型

java 1.5后推出了一个新循环
也叫做增强for循环
新循环只用来遍历集合或数组。
语法:
for( element_type e : arrayOrcollection){
   循环体
}
新循环的循环次数由数组的length或集合的size决定。所以新循环不适用传统循环的需求

数据结构中的队列与栈

队列:
用于保存一组数据。但是对存取元素有严格要求，要求元素存取遵循先进先出原则
FIFO(First Input First Output)

Queue接口
队列的接口。
LinkedList可以保存一组数据，右具有增删效率高的特点，所以其作为队列实现是一种很好的解决方案。







