*一、多对多关系映射
	1、作用
		在操作一方对象时，Hibernate可以自动根据关系
		映射操作另一方，操作包含增、删、改、查。
	2、案例
		在查询管理员时，可以自动查询对应的角色，
		在新增、修改、删除管理员时，可以自动新增、
		修改、删除管理员角色中间表。
	3、开发步骤
		1）明确关联关系及关系字段
			admin_info与role_info具有多对多的关系，
			关系字段是
			admin_role.admin_id=admin_info.id
			admin_role.role_id=role_info.id
		2）实体类中追加关联属性
			在管理员实体类Admin中追加属性封装角色，
			即Set<Role> roles;
		3）在映射关系文件中配置关系
			需要自动拼如下SQL
				select * from role_info where id in (
					select role_id from admin_role
					where admin_id=?
				)
			需要提供如下条件
				a、对方表名role_info
				b、中间表名admin_role
				c、对方表的关联字段role_id
				d、当前表的关联字段dmin_id
				e、2张表的关系
				f、查询结果封装到哪个属性
			配置语法
				<!-- b,f -->
				<set name="roles" table="admin_role">
					<!-- d -->
					<key column="admin_id"/>
					<!-- a,c,e -->
					<many-to-many 
						class="entity.Role"
						column="role_id"/>
				</set>
	4、关联操作
		1）关联查询
			a、lazy属性的使用同一对多
			b、fetch属性的使用同一对多
			c、join fetch
		2）关联增加、修改、删除
			在增加、修改、删除当前表时，自动增加、修改
			、删除中间表的数据。
		3）级联增加、修改、删除
			在增加、修改、删除当前表时，自动增加、修改
			、删除对方表以及中间表的数据。
			cascade="save-update"
				增加、修改
			cascade="delete"
				删除
			cascade="all"
				增加、修改、删除
		4）注意
			--在实际业务中，很少需要在多对多时，新增
				一方自动触发另一方的新增。因此多对多时
				一般不使用cascade。
			--如果使用cascade，那么通常不需要设置
				inverse="true"。由于多对多关联关系字段
				不在对方表中，而在中间表。那么对方表
				在维护自身数据时无法维护关系字段，因此
				关系字段还需主表来负责维护，所以不能写
				inverse="true"。

二、继承关系映射
	1、案例
		对于商品表，我们将各种商品的共性提取出来，存
		到一张商品表product里，目的是可以让这些共性
		字段得以复用，在搜索时只搜索product一张表，
		即可获得多种商品的信息，可以简化搜索。
		希望在操作book表时，可以自动操作product表。
	2、作用
		对于一对一关系的表，其目的是为了复用一些字段，
		那么在Hibernate下，我们面向对象编程，即从对象
		的角度来看，这种复用关系实际上是继承，所以
		把这种一对一的复用目的的表关系，在实体类和
		映射关系文件中体现出来，可称之为继承关联映射。
	3、开发步骤
		1）明确表的关系及关系字段
			book与product具有一对一的关系，关系字段是
			book.id=product.id
		2）实体类中体现继承关系
			Book extends Product
		3）在映射关系文件中配置关联关系
			需要拼如下SQL
				select * from product where id=?
			需要提供的条件
				a、对方表名product
				b、2个对象的关系
				c、关系字段id
			配置语法
				<!-- a,b -->
				<joined-subclass 
					name="entity.Book"
					table="book"
					extends="entity.Product">
					<!-- c -->
					<key column="id"/>
					<property />...
				</joined-subclass>
		4）注意
			--继承关系映射默认就是级联的，不需要
				设置cascade。
			--不需要设置inverse="true"
