zhangdong@tarena.com.cn
一、Oracle相关概念：
    1、什么是数据：
	在不同的领域，针对具体事务的客观描述
    2、什么是数据库（Database）：
	专门用于存储数据的文件。——厂商专用
    3、什么是数据库管理系统（DBMS）
	管理数据文件的系统。
	创建新记录、查询、修改、删除已有内容。
	安全管理和授权机制
    4、什么是关系型数据库管理系统（RDBMS）
        以表格形式存储和管理数据的管理系统。

    5、oracle：
	scott tiger

    6、Why：现代企业开发都是用数据库存储和操作数据。

    7、企业中怎么使用数据库：
	客户端：用户直接使用，显示数据
	应用服务器：定义、处理业务
	数据库服务器：存储数据和管理数据。

二、Oracle环境：
    1、Oracle环境：分为服务器端（DBA预先安装和管理）和客户端（我们使用）
        1)、服务器端：
	    192.168.0.20:tarena
	    192.168.0.23:tarena10g
	    192.168.0.26:tarena
	    用户名：jsd1402
	    密码：jsd1402    
        2)、客户端：发送命令到服务器端，服务器端解释、执行命令，结果返回给客户端
	i、SQL Plus:
	客户端必须安装Oracle client

	Step1：打开终端：
 	    telnet 192.168.0.23
	    或
	    telnet 192.168.0.26
	    用户名：openlab
	    密码：open123  
	Step2：输入sqlplus
	    用户名：jsd1402
	    密码：jsd1402
	Step3：输入第一条命令：
	    select table_name
	    from user_tables;
	*如果乱码：
	    终端-->字符编码-->gbk

	Step4:退出SQLplus:quit/exit
	Step5:退出telnet:exit
	
	ii、sql developer：
	Step1：在opt/sqldeveloper文件夹下，双击sqldeveloper.sh，选择“在终端中运行”
	Step2：点击右上角绿色加号添加新连接
	Step3：查看表结构，查看、修改表数据。
	Step4：在连接上点右键，选择“打开SQL工作表”——进入命令编辑界面
	Step5：输入命令：
	select table_name from user_tables
	点击绿色箭头运行。
    2、什么是SQL：
        数据库查询和程序设计的语言。所有程序设计语言都必须／只能通过ＳＱＬ查询数据库。
　　　1)、DDL：数据定义语言：
	管理存储结构的命令。
	如：新建一张表，删除一张表，修改一张表结构
       2)、DML：数据操作语言：
	管理存储结构中的数据的命令。
	如：录入新纪录，各种查询现有数据，删除、修改现有数据
       3)、DCL：数据控制语言：
	用户和权限管理
	如：新建用户；为用户授权；

三、First DLL：
    1、需求：
    2、创建表结构：
        1)、语法：
        创建 表 用户信息
    create table 表名(
        列名1 数据类型1(长度/最大值) 约束，
        列名2 数据类型2 约束
，
        列名3
	);
    其中：大小写不区分；
        create table是关键字，圆括号包裹多个列的定义，最后使用分号结束。
        表名：自己定义的，数据库中唯一。不能以数字开头。最大长度不能超过30字节。
        列名：表中每列的名字。列名在表内唯一。多列定义之间用逗号分隔。

    2)、数据类型：
        i、What：定义表中每一列可以使用的数据格式和范围
        ii、Oracle内置，遵照使用
        iii、范围和最大值：保证数据类型的格式和有效性。
        iv、创建表时，列名和数据类型是必须的。
    3)、场景：
        i、客户编号：数字,number(7)
	从1到9999999
        ii、客户姓名：汉字,Nvarchar2(4)
	可变的最长4个unicode字符
	只确定最大长度时使用
        iii、身份证号：char(18)
	固定18个字节长度的字符，不足18用空格补齐。
        iv、电话号码：长度不确定，但最大13位。varchar2(13)
        v、地址：汉字最多25个字。
	Nvarchar2(25)
    4)、约束：
        必填（非空）：not null
        唯一：unique
    3、查询表结构：
        why:表结构时间长了，忘了；别人建的表，让我用。
        语法：desc 表名;
    4、删除表：Why：表建错了
        语法：
	删除 用户信息 表
	drop table 表名

四、First DML：
    1、添加新用户数据：
        when：如：注册新用户；新买一张火车票
        语法：
insert into 表名
       (列名1,      列名2，。。。)
values(列名1的新值,列名2的新值,。。。)
        其中:
	列名的顺序和个数，必须和values中的顺序和个数保持一致。
	如果每列都有新值，列名列表可以省去。
	新建数据前至少要知道表结构和约束。——desc 表名
    2、查询：查询表中全部数据
        语法：select * from 表名
	读作从“表名”表中查询所有数据
	    from 表名（1）
	    select *  （2）
    3、更新：更新一批符合条件的记录
        语法：update 表名
	    set 列名1=列名1的新值
	      ，列名2=列名2的新值
	      [，。。。]
	    where 查找的条件
        其中：如果不写where，将指定列中所有值替换为相同内容——危险操作。
    4、删除：删除符合条件的数据
        语法：delete from 表名
	    where 条件
        其中：如果不写Where条件，整个表会被清空。
	如果没有符合条件的数据，就什么都不做。
五、commit与rollback:
    1、现象：
	无论执行多少DML语句，如果不适用commit结尾，所有更改一旦关闭客户端，不会生效。
    2、commit:
	放在左右DML语句结尾位置，作为最后的正式提交。一旦提交不能回退。
	对所有DML来说，有必要在结尾显示使用commit作为提交。	



	




