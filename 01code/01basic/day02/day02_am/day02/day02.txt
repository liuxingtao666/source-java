复习：
  1) 计算机只能按照顺序处理数据：“只能处理数据”
  2) 什么是程序： 数据+处理指令序列
     程序 = 数据结构+算法（处理指令序列）
  3) 高级语言接近人类的语言，由编译器编译为
    计算机程序（ 数据+处理指令序列）
    
  4) Java是先编写源程序(.java)
    然后再编译为字节码程序(.class)
    再通过Java虚拟机（JVM）翻译为具体平台处理的
    数据+指令序列然后执行出结果
   
   java 是先编译，然后再执行的
     
   5) 在编译阶段出现的问题：编译错误
     如果有编译错误，不能生成.class文件，不能执行
   6) 在运行阶段出现的问题：运行错误、运行异常
   
   7) Java 的变量
      A 变量是内存中的数据单元，是数据
      B 模仿了自然语言的代词（代词是变量）
           
      
   Person you;
   Person I;
   
   if(!you.isMarried()){
     I.love(you);
   }
    
1 数据类型
   数据类型是分配内存数据单元的大小 
    
  int age = 5;
    
   数据类型分为两大类：基本类型，引用类型
    基本类型有8种：byte short int long 
    float double boolean char
    引用类型：没数
   如何区别变量的数据类型：除了基本类型都是引用类型
   如：String str; str是引用类型的变量
   引用类型在面向对象阶段详细讲解
  
  计算机内存中使用2进制数据！
  
  基本类型有8种：
   整数4种：都是有符号数（+ -）
    byte  8位(补码) 范围 -128 ~ 127
    short 16位(补码) 范围 -32768 ~ 32767
    int   32位(补码) 范围(约) -21亿 ~ 21亿
          -2^31 ~ 2^31-1
    long  64位(补码) 范围 很大
          -2^63 ~ 2^63-1
  一定了解数据的边界，避免超范围计算（会溢出）
  
  使用原则：一般使用int，如果不过范围使用long
    很少使用short（基本不用），byte用的不多
    在表示最基本的数据单元使用，如文件的数据
  
  
   16G = 1024*1024*1024*16(Byte)
           K    M    G      8bit(位)
       = 1024*1024*1024*16*8(bit)
   
  直接量(常数)：就是直接给出的数据
  int age = 5;  其中5就是直接量
  age是变量 
  直接量 == 字面量
  1) 默认的直接量是 10进制,数字：
     0 1 2 3 4 5 6 7 8 9
  2) 以0开头的是8进制, 数字：0 1 2 3 4 5 6 7
  3) 以0x开头是16进制, 数字：
     0 1 2 3 4 5 6 7 8 9 a  b  c  d  e  f 
                         10 11 12 13 14 15
  4) 经过编译处理以后，都是2进制数据
  5) 10进制，是人类的习惯，书写理解方便
  6) 8进制和16进制是计算机专业中,2进制的缩位
      简写形式，其中8进制是每3位的缩写，16进制是
      每4位的缩写 
      
  总结： 
   1) 计算机内存总只有2进制
   2) 默认情况输入输出采用10进制
      在输入输出时候采用API（Integer）转换为2进制
   3) 为方便书写2进制，使用16进制缩写书写2进制
   
  面试奇葩题：
    int c = 078;
    System.out.println(c);
    输出结果：
    A.编译错误  B.运行异常  C.78  D.078   
      
  字面量的后缀：L l 表示long类型数据
  直接写的整数字面量是int类型
  如： long l = 129299292929;//编译错误 
      long l = 129299292929L;
   
  long 类型可以作为时间

2 浮点数（小数）: float  double 
  浮点数标准请参数 ： IEEE754标准 
  1) float  是32位浮点数  
  2) double 是64位浮点数  的精确度大约是float两倍
    
  3.1415926535897932384626433832
  314.1592 = 3.141592 * 10 * 10
  
  3) 为了计算准确一般采用double
  4) 浮点数计算是不绝对精确的，有舍入误差
  5) F/f 是float后缀  D、d是double后缀
  6) 如何不精确比较
     Math.abs(Math.sin(3.1415926)) < 0.0000000001
     
   
   
  
     
    





    
    
    
    
    