一：网页
    1、什么是网页：
	通过互联网访问的特殊的文件
	说明：
	    网页本质上是简单的文本文件	
	    所有网页都使用专门的HTML语言编写
	    最普通的网页是以.html结尾 
    2、HTML：学名：超文本标记语言
	说明：
	vs XML:基本语法和XML一致
	       具有严格的标签规范，遵照执行。
        Step1：新建一个普通的文本文件，名为home.html
        Step2：使用gedit打开，录入两行内容
	First Web Page
	<h1>First Web Page</h1>
        Step3：保存，双击打开
        Step4：把h1改为h2-h6
     3、浏览器：
	读取网页内容，展现网页效果的软件
	作用：
	   识别不同标签，将标签中的内容显示为不同的样式。
	    不显示标签，仅显示格式化之后的内容。
     4、什么是URL地址：学名：统一资源定位符
	指向网络中任意资源（网页、视频、软件）的地址
	如：
	http://www.tarena.com.cn/  home  /home.html
	协议：  域名                文件夹名  网页文件名
    5、网站与服务器：
	1)网站：
	    包含相互关联的多个网页的服务器上的文件夹
	2)服务器：
	    能够向客户提供网页的硬件和软件的组合。
	    Web服务器软件：
	         IIS、tomcat
    6、真实网站：
    总结：
	浏览器的三大作用:
	向服务器发送请求，并且接收服务器发回的响应
	把接收到的网页按照不同的标签，渲染给最终的用户显示。
	执行程序，验证录入内容，展现特效。

二、HTML标准
    1、标签：
        标记网页中不同内容，展现不同效果的记号
        语法：
	<标签名>内容</标签名>
        说明：
	标签名必须前后一致。
           标签名不区分大小写。--所有标签名必须小写
     2、注释：
	<!-- 注释内容 -->
     3、HTML文档结构：
	基本结构：
	    <html>
	        <head> <!--对网页的配置，不会显示在正文当中 -->
 		<title>
		    <!--网页标题，出现在浏览器的选项卡上 -->
		</title>
	        </head>
	        <body>
	             <!--网页内容正文 -->
	        </body>
	    </html>
	说明：
	**如果结构不对、标签不对，浏览器会使用怪异模式强行解析网页内容。
	**用怪异模式解析的网页，不同浏览器显示结果不同。
     4、网页字符编码：
	告诉浏览器用什么编码解释内容
	语法：在head中
	<meta charset="utf-8"/>
        说明：
	如果希望网页跨操作系统通用
	Step1：将网页文件另存为utf-8格式
	Step2：在head中设置字符集为utf-8
         **charset的值必须和文件的编码格式保持一致
      5、标签格式：
        封闭标签：有开始必须有结束：<h1></h1>
        非封闭标签：不比有结束标签：<meta .../>
        强调：
	一般标签默认必须封闭
	非封闭标签，上课会提醒。
       6、文档类型：
	限制浏览器必须使用W3C标准规范解析标签
	好处：最大限度规范浏览器之间的差异。
	语法：在页面最顶端
	<! doctype html>
	1)、严格型：
	要求浏览器必须使用W3C最新规定解析网页。
	频率：较少
	2)、传统型：
 	要求浏览器必须使用w3c标准解析，但兼容旧式的或不推荐使用的标签。
	频率：普遍
	When：网页较复杂时，或者旧式的网站，适合使用。
	3)、HTML5标准：
	<!DOCTYPE html>
	优点：
	    短小，不容易出错
	    现在所有浏览器都认识，默认使用标准模式解析网页
	    先前兼容Html4标准

	另：框架型
三、文本标签：
    1、标题：以标题格式显示的内容
	语法：<hn>标题内容</hn>
	说明：n:1-6
	样式：字体变大，黑体，行间距增大
	    **前后换行
    2、属性：
        修饰元素的关键字，必须放在开始标签中。
        语法：
	<标签名 属性名="属性值"[ 属性2="值2"...]></标签名>
        强调：
	属性名：有标准，遵照执行
	属性值：必须放在=后，使用双引号包裹
	如：align="center"--内容居中
        常用属性：
	id:在网页中唯一标示一个元素
	语法：<元素名 id="元素别名"></元素名>
	**CSS和javascript中极其有用。
    3、段落：
        把内容单独放在一段中。
        语法：
	<p>内容</p>
        样式：
	默认占满页面宽度
	内容超出宽度，自动换行
	前后回车，增大行间距
    4、特殊字符：
        现象：回车无效；空格折叠；特殊尖括号
        解决：
	换行：<br/>
	空格：&nbsp;
	尖括号：&lt; &gt;
	Tab：&emsp;
     5、块元素和行内元素：
	块元素——block:默认占满页面宽度，前后增加换行
	如：hn、p、div
	行内元素——inline:不改变换行，内容多大，空间就占多大。
	如：<strong></strong>
	     <em></em>
	
w3cschool
	    
四、图片和超链接：
    1、图片：在网页中显示图片
        语法：
	<img src="图片地址"/>
        其中：
	非封闭元素,行内元素
	src:如果图片和网页在同一个目录下，src=图片名
	     如果图片和网页不在同一个文件夹下
		src="父文件夹/[子文件夹/...]图片名"
        属性：
	width:设置图片的宽度
	height:设置图片的高度
        强调：
	单独设置属性：图片比例保持不变
     2、超链接：
         What：点击一个文字或图片可以跳转到其它网页
         语法：
	<a href="目标地址">
	     可以点击的内容
	</a>
         属性：
	target:是否在新窗口打开超链接
	      _self(默认)：替换当前页面
	      _blank：保留当前页面，在新窗口打开。可重复打开
         强调：
	**行内元素，封闭元素

      3、URL：统一资源定位符
        What：指向网络中人以资源的地址
           1)、互联网上：
	2)、网站内部定位：
	    ../：表示向上一级文件夹。

    4、锚点：
        标记网页中的一个位置
        When：页面很长，浏览不方便时使用
        方法1：
	Step1:在网页指定位置添加锚点：
	     <a name="锚点名"></a>
	Step2：设置超链接，指向锚点
	     <a href="#锚点名"></a>
        方法2：将元素的id作为锚点
	Step1：<a href="#id值"></a>
        方法3：默认回到页面顶端：
	<a href="#"></a>
五、列表与表格：
    1、列表：
	并列的一组数据整齐排列。
        When：导航菜单
        效果：
	无序列表：默认从上到下排列，每一项居左对齐，每一项前边使用黑点唯一标示
	有序列表：默认从上到下排列，每一项居左对齐，每一项前自动编号
        1)语法：
	无序列表：
	<ul>
	    <li>第一项内容</li>
	    <li>第二项内容</li>
	    ...
	</ul>
	强调：
	　**ul下只能包含li元素
	  **所有列表项内容必须写在li中。
	有序列表：
	<ol>
	    <li></li>
	    ...
	</ol>
	说明：有序列表手动编写的顺序，不负责自动排序
        2)、列表嵌套：
	父级列表的列表项中又包含子列表
	When：多级导航菜单
           
    2、表格：
        When：以行列方式显示数据；小范围布局
        语法：
	<table>
	    <caption></caption>
	    <tr>
	         <th></th><th></th><th></th>
	    </tr>
	    <tr>
	        <td></td><td></td><td></td>
	    </tr>
	    <tr>
	    </tr>
	</table>
    1)、属性：
	border:边框：仅设置外边框，可以显示阴影效果
	width:宽度
	height：高度
	align:对齐
    2)、行分组：
	表头分组：<thead>
		     表头行
		</thead>
	内容行分组：<tbody>
		      多个内容行
		    </tbody>
	When：整体应用样式时。
	强调：
	   **不是所有属性都可以放在tbody中。
    3)、单元格的填充和间距：
	单元格填充：cellpadding="数值"
	效果：让单元格变高变胖
	单元格间距：cellspacing="数值"
	效果：单元格大小不变，每个单元格之间的距离变化
	说明：padding--内部；相对于单元格边框
    4)、复杂表格：
	When：单元格合并
	水平合并：——跨列合并 colspan="合并的单元格数"
	上下合并：——跨行合并 rowspan="合并的单元格数"
	说明：
	  **单元格的合并会导致合并方向上的单元格数目减少。

     建议：表格标签今后在开发中尽量完整定义。
六、表单：
     What：专门用于收集数据，向服务器发送
     When：需要收集用户数据时
     如：登录、注册；在线考试
     语法：<form></form>
     说明：封闭元素，块元素
     	form元素中可以放置任何HTML元素
	所有表单第一步都是进行小范围布局——table
    1、控件——文本框：
        When：只需要用户录入文本内容时使用。
        语法：<input [id=] [type="text"] name="发回服务器时的变量名"/>
        强调：
	所有Input元素都是非封闭元素
	name属性必须定义，给服务器端程序使用
	    如果控件的值不需要回发服务器，可以省略name
	type：说明控件的类型，如果是文本框可以省略。
    2、控件——密码文本框
        When：任何情况下输入密码，必须使用密码框
        属性：
	Type="password"
	强调：非普通文本框，必须定义Type
	       Type的内容有标准，遵照执行
        常用属性：
	maxlength="字数"：允许输入的最大字数
	readonly：设置控件只读
    3、按钮：
       专门响应点击动作，完成一个任务
       分类：
	提交：专门用于提交表单
	<input type="submit" value="按钮显示的文本"/>
	重置：专门用于清空表单中已经填写的内容
	<input type="reset" value="按钮显示的文本"/>
	自定义按钮：（后三天重点）
	
     4、提交表单：
         get方式：（默认方式）
         /form.html?username=zhangdong&pwd=123456	
	说明：页面地址?变量列表
	     变量：变量名=变量值&变量名=变量值
         post方式：
            说明：将表单内容打包后，分段发送
	语法：<form method="post">

    5、选择框：
        When：预先给出备选项，引导或限制客户的选择。
        语法：
	单选：<input type="radio" name="变量名" value="选项对应的值"/>选项文本
	强调：
	    选择框中的name属性，两个作用：
	         一是作为变量名
	         二是作为分组名
	    选择框本身不带文本，需要在外部追加
	变量：&sex=mal
	多选框：<input type="checkbox" ......
	强调：
	    选中几项，就追加几项同名的变量
	变量：
	    &roles=sa & roles=stu
        扩大选中区域：
	语法：
	   Step1:<input id="id值" ......./>
	   Step2:<label for="id值">选项文本</label>
	   强调：label是封闭标签
        控件分组：
	When：选项较多时，视觉上展现矩形框，以示分组。与功能无关。
	语法：
	    <fieldset>
		<legend>标题</legend>
		<input...
		<input...
		...
	    </fieldset>
     强调：**如果设置默认选中项：
	在选项的开始标签中指定checked属性
    6、列表框：
        What：所有备选项排列在一个列表中
        When：备选项非常多时，使用列表框替换选择框
        语法：
	单选：
	<select name="变量名">
	    <option value="值1">备选项1文本</option>
	    <option value="值2">备选项2文本</option>
	    ...
	</select>
	多选：
	<select name="变量名" size="显示的选项个数" multiple>
	    选项列表
	</select>
	说明：
	    multiple:表示允许多选，支持鼠标滑动批量选择
	    size：默认显示的项数，超出则以滚动方式显示。
	有点：节省空间
	缺点：无法完整显示所有选中项。
    强调：如何设置默认选中项：
	在选中项的开始标签中增加selected属性
    7、文件选择框：
    When：需要向服务器上传文件时使用
    语法：<input type="file"/>
    说明：仅临时保存要上传文件的路径。
	**如果表单中包含文件上传功能，method必须设置为post。
    8、文本域：
      When：输入大段文字时，包含回车，缩进等时使用。
      语法：<textarea 
		cols="每行最多显示字数"
		rows="一次显示的行数"
	           name="变量名"></textarea>
      问题：文本域默认可以拖拽大小
      解决：style="resize:none"
    9、隐藏域：
      What：包含在表单中，单不显示的值
      语法：<input type="hidden" name="customerID" value="253"/>
      结果：& customerID=253
      说明：
	隐藏域不占用页面控件，可以放在表单中的任意位置
	不是绝对隐藏，客户可以通过查看网页源代码看到隐藏域的内容。
    10、iframe：
        What：在网页中引入外部资源（另一个网页，一个插件，广告，视频）
        When：希望把外部资源引入网页时
        语法:
	<iframe src="引入资源的地址" width="天窗的宽度" height="天窗高度" scrolling="no"></iframe>
	
      























