CSS
一、概念：
    1、样式(style):专门定义元素显示效果的属性
    强调：语法和HTML完全不同
    How：<标签名 style="属性名1:属性值1;属性名2:值2">
    说明：属性名与属性值之间使用冒号连接
	多个属性之间使用分号分割。
         **旧式属性名与CSS标准中的属性名无一一对应关系
	旧式的样式不能满足当前多种浏览器的一致性要求。必须是用CSS标准。
     缺点：无法重用
     2、样式表(style sheet)：集中编写样式的地方：
	Why：希望同一类样式可以重复使用，一次定义处处使用，一次更改处处生效。
         分类：
	内部样式表：放在网页内部的样式表
	语法：
	     <head>
		<style>
		    元素名{
		         属性1;
		         属性2;
		         ...
		    }
		</style>
	     </head>
 	 缺点：应用范围仅限于本页
	外部样式表：独立放置的样式文件
	How：
	    Step1：在网站文件夹中新建一个普通的文本文件，扩展名为.css
	    Step2：在.css文件中集中设计样式属性
	    h1{text-align:center;}
	    Step3：在需要样式的网页中，head标签内引入.css文件
	    <link rel="Stylesheet" href="URL"/>   
            说明：
	 一般网站中，都是使用外部样式表定义所有页面统一样式。
    3、样式表优先级：
        What：在多个样式表中对同一个元素的同一个样式属性定义了不同值，最终效果取决于谁最后定义。
        强调：
	浏览器自上而下解释执行。后解释的后执行，有可能替换先解释的内容
二、实际工作场景：
三、划分区域：
     1、div:定义网页中的一个区域
      When：一般拿到美工图片后第一件事就是划分区域
      建议：两个顺序：自上而下，由外到内
	每个分区都要定义唯一的id。
      说明：
	div：块元素，封闭元素
	     其中可以放任何HTML元素
    2、选择器：用于选择元素的语法
        Why：样式不总是统一应用在所有元素上。大多数情况下是有选择的应用。
        语法：
	选择器{样式1;样式2;}
        分类：
	1)、元素选择器：选择器=元素名
	如：h1{...}
	When：所有h1元素都使用统一样式时
	2)、id选择器：选择器=#id值
	When：根据id值，精确为某一个元素定义样式
	3)、类选择器：
	How：先把元素分类，再将共同的样式定义在分类上。――分类中的所有元素，都统一应用类的样式
	When：个别元素拥有相同的样式属性时使用。
	     不一定所有样式都相同，只要有共同点即可
	语法：
	     Step1：在元素的开始标签中定义类名
		class="类名"
	     Step2：在CSS文件中，为类定义统一样式
	           .类名{样式列表}   
	说明：类选择器通常和其它选择器共同使用
	4)、样式表特性2：层叠性
	What：多个选择器中，为同一个元素定义的不同样式，最终会合并显示。
           5)、选择器分组：多个选择器可以临时组合成一个新的选择器组。
	语法：选择器1,选择器2...{}
	vs 类选择器：
	    相同：都是对一组元素应用共同样式
	    不同：类选择器需要两步，选择器分组仅需要一步。
	优点：非常灵活，可以随意组合
	确定：团队开发优先选择类选择器。
	6)、派生选择器：
	按照元素的包含关系选择子元素
	语法：
	    父级选择器 子级选择器 ...{ }
	7)、样式表特性3：继承性
	子元素继承父元素相同样式属性
	强调：不是所有属性都继承
	比如：和边框、边距、间距有关的不继承

    3、伪类：
       What:向选择器所指的元素上添加特殊动态效果
       语法：选择器:伪类名{...}
	说明：伪类名有专门定义，遵照执行。
       常用伪类：
	如：1--a:link{...} /*未访问过的连接*/
	     1--a:visited{...} /*已访问过的连接*/
	     2--a:hover{...} /*当鼠标悬停在连接上时显示的样式*/
	     3--a:active{...} /*鼠标按下时*/
	说明：不一定都要定义。要定义就要按上下顺序写。
四、常用CSS样式：
    1、字体格式化：
	指定字体：font-family:字体1,字体2,...;
	字体颜色：color:颜色值|颜色名;
	字体大小：font-size:value;
	粗体：font-weight:bold;
	文本对齐：text-align:left|right|center;
	去下划线：text-decoration:none|underline;
	
    2、尺寸：
	属性：width和height
	单位：
	1)、px：像素，相对于屏幕分辨率
	     When：希望基于当前屏幕分辨率计算长度时
	          频率：广泛――国内
	     相对：屏幕分辨率增大，每个像素点变小，内容区域也变小。
	     绝对：如果屏幕分辨率固定，则每个像素点大小固定。
	2)、em：相对于父元素内文本的字体尺寸。
	When：不关心具体大小，只关心与父元素原有字体大小的倍数。
	说明：相对长度
	国内网页标准：
	默认16px=1em;
	广泛使用的字体是12px=.75em
	问：如果父元素字体改为12px，子元素要与父元素字体一致，使用？em
	1em
	3)、pt：磅（1/72英寸）
	说明：纯绝对长度
	16px=1em=12pt
	12px=.75em=9pt――窗体应用程序常用标准字体大小
    3、颜色：RGB三基色，分别代表三个数
	定义：
	    颜色名
	    #rrggbb: #FF0000
	    #rgb:简写#f00
五、分页
    1、行高：
        What：设置行上下边界的距离
        When：上下调整文字位置时使用。
	常用：垂直居中：行高=容器的高度
	强调：行高是设置在内容元素上
        语法：line-height:高度值
    2、元素分类选择器：
        When：在一组元素上定义个别特殊样式。
        语法：
	Step1：在要特殊显示的样式上增加class类名
	Step2：元素选择器.类名
    3、框模型：（BoxModel）把元素看做一个盒子
	Why：**行内元素不支持宽度和高度属性
	    如果要想改变行内元素的大小或间距可以使用框模型
	    同样也适用于块元素。	
	简单说：
	四部分：1、内容区域：宽和高属性设置的区域
	          2、内填充区域：从内容区域到边框的距离――元素变胖变高
	          3、边框：border
	          4、外部间距：边框外的隔离区――50米内禁止摆摊
	由内向外：padding-->border-->marging
	语法：
	    padding:上 右 下 左
	    简写：如果上=下，右=左
		padding:上下 左右;
	    单边设置：padding-top/right/bottom/left:值
	    margin语法同padding
	    border：宽度 样式 颜色；――四边一致定义
	    border-top/right/bottom/left: 宽度 样式 颜色

	容器水平居中：margin:0 auto;
	    其中auto表示浏览器自动计算左右间距
六、表格样式：
    1、优先级：
        **只要给th或td设置了背景色，则其他背景色失效。
	解决办法：将td中的背景色，改为表格整体定义
    2、边框合并：
	border-collapse:collapse|separate(默认)
		        合并       分离
    3、其它属性：
	单元格内容垂直定位：vertical-align:top/bottom/center
七、背景：
   1、背景色：background-color:颜色值/颜色名
   2、背景图片：
       When：将元素的背景设置为图片时使用。 
       语法：background-image:url(URL) 
       强调：如果背景图片小于容器的大小，则背景图片横向和纵向平铺。
       好处：图片小，加载快
       习惯：背景图片和背景色共同设置。防止背景图片加载延迟。
    3、带图标的按钮：
        1)、修改背景平铺：
	When：不希望背景平铺或者仅希望一个方向平铺时使用。
	语法：background-repeat:repeat(默认)
			       no-repeat:不平铺
			       repeat-x:仅横向平铺
			       repeat-y:仅纵向平铺
        2)、背景定位：
	When：默认背景在左上角显示，想改变背景图片位置时使用。
	语法：
background-position:left/      top/
	         center/  	center/
		right 	bottom

	一个参数的情况：
background-position：	   top(隐含)
		left(隐含)     center     right
			   bottom
	如：背景定位：(left) bottom
	     背景定位：right  (top)
    4、动画按钮：
      What：鼠标滑过、按下时，背景变化不同效果
      原理：
	如果背景图片大于容器，默认显示容器等大小的左上区域。
	可以使用背景定位，修改背景图片显示区域的位置
	如：背景定位为底部：则显示背景图片中底部的区域。
八、浮动定位：
    1、需求：
    2、浮动：像浮冰一样，把区域浮在原有布局之上。
        When：专门用于左右排列区域
        说明：设置元素浮动，相当于将元素排除在原有布局之上。
	    浮动的元素原来的位置会被相邻元素填补。
        语法：float:left/right
    3、清除浮动影响：
        When：某个元素不希望受到相邻浮动元素遮挡时使用
        语法：clear:left：清除前边元素的影响
		/right：清除后边元素的影响
		/both：清除前后元素的影响
    4、**浮动中的宽度计算：
        一个块元素所占的完整宽度包括：
	width+所有Padding+所有margin+所有border

九、导航菜单：
    1、三步：去圆点；改横排；变成块
         1)、去圆点：
	属性：list-style-type:none;
         2)、改横排：
	在每个列表项li中设置float:left
	让每个列表项从左向右浮动排列。
         3)、变成块：
	属性：display:block――将行内元素修改为块元素
		    |inline――将块元素修改为行内元素
		    |none――隐藏当前元素
十：自由定位：想在哪儿定位就在哪儿定位
    When：单个弹出窗口或广告位
    How：三步：找参照！飘起来！定位移！
    1、飘起来：
        属性：position:relative|absolute|fixed
        分类：
        1)、相对定位：position:relative
	位移属性：Top:距离；也可是left、right、bottom
	分别指：元素四边距离原始位置四边的距离
        2)、绝对定位：
	What：相对于一个父元素作为参照而移动位置
	How：父级相对，自己绝对，修改位移
	说明：Top等位移属性的值可以为负。
        3)、相对于浏览器窗口定位：
	What：不随滚动条滚动而移动











